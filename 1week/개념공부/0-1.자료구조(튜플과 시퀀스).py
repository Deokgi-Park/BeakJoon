# 파이선 자료 구조
###################################################
#1. 튜플
 #1-1 형태 및 선언
A = '123',123,'1','2','3'
print(A)
A = ('123',123,'1','2','4')
print(A[4])
# 튜플 값을 추가할 수는 없으나 합쳐서 새로 선언하거나 리스트를 넣은 경우 리스트에 추가는 가능하다.
A = ('123',123,'1','2',[4,5])
A[4].append(6)
print(A[4])
print(A[0][1])

B,C,D,E,F = A
print(F)
###################################################
#1. 시퀀스
 # 리스트, 문자열, 튜플은 시퀀스 자료형이다.

 # len(변수), 변수[index] 와 같이 자료의 길이나 인덱스를 추출할 수 있다.

 # 같은 시퀀스 끼리만 합칠 수 있다.
 # 다만 리스트만 인덱스 슬라이스 출력이 가능하다. 재할당은 리스트만 가능하다.
A = 'str'
B = 'sum'
C = 's', 't', 'r'
D = 's', 'u', 'm'
E = ['str']
F = ['sum']
A = A+B
print(A)
#불가 : print(A+C)
#불가 : print(A+E)
C = C+D
print(C)
#불가 : print(C+E)
E = E+F
print(E)
print(A[0])

 # zip 같은 길이의 시퀀스를 결합
G, H = ['1번', '2번'], (123,456)
print(list(zip(G,H)))
print(dict(zip(G,H)))
print(tuple(zip(G,H)))
###################################################